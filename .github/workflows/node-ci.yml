name: CI/CD Build Workflow

on:
  workflow_dispatch:

  push:
    branches: [main]

  pull_request:
    branches: [main]

  merge_group:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  CI: true
  NPM_VERSION: 21.7.2

jobs:
  pre_job:
    continue-on-error: true
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    permissions:
      actions: write
      contents: read
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf # v5.3.1
        with:
          do_not_skip: '["schedule", "workflow_dispatch"]'
          paths_ignore: '["**/CHANGELOG.md", "**/LICENSE", "**/README.md"]'
          paths_filter: |
            core:
              paths:
                - 'packages/core/**'
                - 'integration/core/**'
            react:
              paths:
                - 'packages/react/**'
                - 'e2e/apps/react/**'
                - 'e2e/tests/**'
            vue:
              paths:
                - 'packages/vue/**'
                - 'e2e/apps/vue/**'
                - 'e2e/tests/**'
          skip_after_successful_duplicate: false
          # We want to skip only concurrent runs. Subsequent runs/retries should be allowed.

  core:
    name: Core Package CI
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' && !fromJSON(needs.pre_job.outputs.paths_result).core.should_skip }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup PNPM
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        # Install version depends on package.json `packageManager` field

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run build
        run: pnpm run build

      - name: Run integration test
        run: pnpm run test

  react:
    name: React Adapter CI
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' && !fromJSON(needs.pre_job.outputs.paths_result).react.should_skip }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    env:
      UI: react
      HOME: /root
      LARAVEL_BYPASS_ENV_CHECK: 1
    container:
      image: mcr.microsoft.com/playwright:v1.45.0-jammy
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup PNPM
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        # Install version depends on package.json `packageManager` field

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run build
        run: pnpm run build

      - name: Run e2e test
        run: 'pnpm run test:react'

  vue:
    name: Vue Adapter CI
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' && !fromJSON(needs.pre_job.outputs.paths_result).vue.should_skip }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    env:
      UI: vue
      HOME: /root
      LARAVEL_BYPASS_ENV_CHECK: 1
    container:
      image: mcr.microsoft.com/playwright:v1.45.0-jammy
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup PNPM
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        # Install version depends on package.json `packageManager` field

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run build
        run: pnpm run build

      - name: Run e2e test
        run: 'pnpm run test:vue'

  # This job is the final job that runs after all other jobs and is used for branch protection status checks.
  # See: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks
  # https://github.com/orgs/community/discussions/26822#discussioncomment-5122101
  build-result:
    name: Build Result
    needs: [pre_job, core, react, vue]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - name: Debug build result
        run: |
          echo "pre_job_result: ${{ needs.pre_job.outputs.should_skip }}"
          echo "core_job_result: ${{ needs.core.result }}"
          echo "react_job_result: ${{ needs.react.result }}"
          echo "vue_job_result: ${{ needs.vue.result }}"
          
      - name: Check status of all precursor jobs
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
